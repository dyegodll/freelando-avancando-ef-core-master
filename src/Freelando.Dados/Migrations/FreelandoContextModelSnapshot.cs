// <auto-generated />
using System;
using Freelando.Dados;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Freelando.Dados.Migrations
{
    [DbContext(typeof(FreelandoContext))]
    partial class FreelandoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Freelando.Modelo.Candidatura", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_Candidatura");

                    b.Property<string>("DescricaoProposta")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DS_Proposta");

                    b.Property<string>("DuracaoProposta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Duracao_Proposta");

                    b.Property<Guid>("ServicoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_Servico");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ValorProposto")
                        .HasColumnType("float")
                        .HasColumnName("Valor_Proposto");

                    b.HasKey("Id");

                    b.HasIndex("ServicoId");

                    b.ToTable("TB_Candidaturas", (string)null);
                });

            modelBuilder.Entity("Freelando.Modelo.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_Cliente");

                    b.Property<string>("Cpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TB_Clientes", (string)null);
                });

            modelBuilder.Entity("Freelando.Modelo.Contrato", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_Contrato");

                    b.Property<Guid>("ProfissionalId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_Profissional");

                    b.Property<Guid>("ServicoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_Servico");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ProfissionalId");

                    b.ToTable("TB_Contratos", (string)null);
                });

            modelBuilder.Entity("Freelando.Modelo.Especialidade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_Especialidade");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DS_Especialidade");

                    b.HasKey("Id");

                    b.ToTable("TB_Especialidades", (string)null);
                });

            modelBuilder.Entity("Freelando.Modelo.Profissional", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_Profissional");

                    b.Property<string>("Cpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TB_Profissionais", (string)null);
                });

            modelBuilder.Entity("Freelando.Modelo.Projeto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_Projeto");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("DS_Projeto");

                    b.Property<Guid?>("ID_Cliente")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_Projeto");

                    b.HasIndex("ID_Cliente");

                    b.ToTable("TB_Projetos", (string)null);
                });

            modelBuilder.Entity("Freelando.Modelo.Servico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_Servico");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DS_Projeto");

                    b.Property<Guid>("ProjetoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_Projeto");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjetoId");

                    b.ToTable("TB_Servicos", (string)null);
                });

            modelBuilder.Entity("Freelando.Modelos.ProfissionalEspecialidade", b =>
                {
                    b.Property<Guid>("EspecialidadeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_Especialidade");

                    b.Property<Guid>("ProfissionalId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_Profissional");

                    b.HasKey("EspecialidadeId", "ProfissionalId");

                    b.HasIndex("ProfissionalId");

                    b.ToTable("TB_Especialidade_Profissional", (string)null);
                });

            modelBuilder.Entity("Freelando.Modelos.ProjetoEspecialidade", b =>
                {
                    b.Property<Guid>("EspecialidadeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_Especialidade");

                    b.Property<Guid>("ProjetoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_Projeto");

                    b.HasKey("EspecialidadeId", "ProjetoId");

                    b.HasIndex("ProjetoId");

                    b.ToTable("TB_Especialidade_Projeto", (string)null);
                });

            modelBuilder.Entity("Freelando.Modelo.Candidatura", b =>
                {
                    b.HasOne("Freelando.Modelo.Servico", "Servico")
                        .WithMany("Candidaturas")
                        .HasForeignKey("ServicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Servico");
                });

            modelBuilder.Entity("Freelando.Modelo.Contrato", b =>
                {
                    b.HasOne("Freelando.Modelo.Servico", "Servico")
                        .WithOne("Contrato")
                        .HasForeignKey("Freelando.Modelo.Contrato", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Freelando.Modelo.Profissional", "Profissional")
                        .WithMany("Contratos")
                        .HasForeignKey("ProfissionalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Freelando.Modelos.Vigencia", "Vigencia", b1 =>
                        {
                            b1.Property<Guid>("ContratoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("DataEncerramento")
                                .HasColumnType("datetime2")
                                .HasColumnName("Data_Encerramento");

                            b1.Property<DateTime>("DataInicio")
                                .HasColumnType("datetime2")
                                .HasColumnName("Data_Inicio");

                            b1.HasKey("ContratoId");

                            b1.ToTable("TB_Contratos");

                            b1.WithOwner()
                                .HasForeignKey("ContratoId");
                        });

                    b.Navigation("Profissional");

                    b.Navigation("Servico");

                    b.Navigation("Vigencia");
                });

            modelBuilder.Entity("Freelando.Modelo.Projeto", b =>
                {
                    b.HasOne("Freelando.Modelo.Cliente", "Cliente")
                        .WithMany("Projetos")
                        .HasForeignKey("ID_Cliente");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Freelando.Modelo.Servico", b =>
                {
                    b.HasOne("Freelando.Modelo.Projeto", "Projeto")
                        .WithMany("Servicos")
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("Freelando.Modelos.ProfissionalEspecialidade", b =>
                {
                    b.HasOne("Freelando.Modelo.Especialidade", "Especialidade")
                        .WithMany("ProfissionaisEspecialidade")
                        .HasForeignKey("EspecialidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Freelando.Modelo.Profissional", "Profissional")
                        .WithMany("ProfissionaisEspecialidade")
                        .HasForeignKey("ProfissionalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Especialidade");

                    b.Navigation("Profissional");
                });

            modelBuilder.Entity("Freelando.Modelos.ProjetoEspecialidade", b =>
                {
                    b.HasOne("Freelando.Modelo.Especialidade", "Especialidade")
                        .WithMany("ProjetosEspecialidade")
                        .HasForeignKey("EspecialidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Freelando.Modelo.Projeto", "Projeto")
                        .WithMany("ProjetosEspecialidade")
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Especialidade");

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("Freelando.Modelo.Cliente", b =>
                {
                    b.Navigation("Projetos");
                });

            modelBuilder.Entity("Freelando.Modelo.Especialidade", b =>
                {
                    b.Navigation("ProfissionaisEspecialidade");

                    b.Navigation("ProjetosEspecialidade");
                });

            modelBuilder.Entity("Freelando.Modelo.Profissional", b =>
                {
                    b.Navigation("Contratos");

                    b.Navigation("ProfissionaisEspecialidade");
                });

            modelBuilder.Entity("Freelando.Modelo.Projeto", b =>
                {
                    b.Navigation("ProjetosEspecialidade");

                    b.Navigation("Servicos");
                });

            modelBuilder.Entity("Freelando.Modelo.Servico", b =>
                {
                    b.Navigation("Candidaturas");

                    b.Navigation("Contrato")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
